<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Henry 기술블로그</title>
  
  
  <link href="/guriOH.github.io/atom.xml" rel="self"/>
  
  <link href="https://gurioh.github.io/guriOH.github.io/"/>
  <updated>2020-01-13T12:54:43.615Z</updated>
  <id>https://gurioh.github.io/guriOH.github.io/</id>
  
  <author>
    <name>Henry Oh</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>AWS/EC2/Summary</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/Summary/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/Summary/</id>
    <published>2020-01-13T05:44:31.875Z</published>
    <updated>2020-01-13T12:54:43.615Z</updated>
    
    <content type="html"><![CDATA[<h1 id="summary">Summary</h1><p>Tips</p><h2 id="pricing-model">Pricing model</h2><ol><li>on Demand</li><li>Reserved</li><li>Spot<ul><li>If the Spot instance is terminated by EC2, you will not be charged for a partial hour of usage, However if you terminate the instance yourself, you will be charged for any hour in which the instance ran</li></ul></li><li>Dedicated Hosts</li></ol><h2 id="instance-type">Instance Type</h2><h2 id="ebs">EBS</h2><ul><li>Terminatin Protection is turned off by default, you must turn it omn</li><li>On an EBS-backed instance, the default action is for the root EBS volume to be deleted whe the instance is termicated.</li><li>EBS Root Volumes of your DEFAULT AMI’s can be encrypted. You can also use a third party tool(such as bit locker etc) to encrypt the root volume, or this can be done when creating AMI’s (remember the lab) in the AWS console or using the API.</li><li>Additional volumes can be encrypted.</li></ul><h2 id="security-groups">Security Groups</h2><ul><li>All inbound traffic is blocked by defailt.</li><li>All Outbound traffic is allowed.</li><li>Changes to Security Groups take effect immediately.</li><li>You can have any number of EC2 instances within a security group.</li><li>You can have multiple security groups attached to EC2 instances.</li><li>Security Groups are STATEFUL.</li><li>If you create an inbound rule allowing traffic in, that traffic is automatically allowed back out again.</li><li>You cannot block specific IP address using Security Groups, instead use Network Access Control Lists.</li><li>You can specify allow rules, but not deny rules.</li></ul><h2 id="compare-ebs-types">Compare EBS Types</h2><ol><li>SSD<ul><li>General Purpose SSD</li><li>Provisioned IOPS SSD</li></ul></li><li>HDD<ul><li>Throughput Optimized HDD</li><li>Cold HDD</li><li>EBS Magnetic</li></ul></li></ol><h2 id="ebs-snapshots">EBS snapshots</h2><ul><li>Volumes exist on EBS, Think of EBS as a virtual hard disk.</li><li>Snapshots exist on S3. Think of snapshots as a photograph of the disk.</li><li>Snapshots are point in time copies of Volumes.</li><li>Snapshots are incremental : this mean that only the blocks that have changed since your last snapshot are moved to S3</li><li>If this is your first snapshots, it may take some time to create.</li><li>To create a snapshots for amazon EBS volumes that serve as root devices, you should stop the instance before taking the snapshot.</li><li>However you can take a snap while the instance is running.</li><li>You can create AMI’s from both volumes and snapshots</li><li>You can change EBS volume sizes on the fly, including changing the size and storage type.</li><li>Volumes will ALWAYS be in the same availability zone as EC2 instance</li></ul><h2 id="migrating-ebs">Migrating EBS</h2><ul><li>To move an ev2 volume from one AZ to another, take a snapshot of it, create an AMI from the snapshot and then use AMI to launch the EC2 instance in a new AZ.</li><li>To move an EC2 volume from one region to another, take a snapshot of it, create an AMI from the snapshot and then copy the AMI from one region to the other. Then use the copied AMI to launch the new EC2 instance in the new region.</li></ul><h2 id="ebs-encryption">EBS Encryption</h2><ul><li><p>Snapshots of encrypted volumes are encrypted automatically.</p></li><li><p>Volumes restored from encrypted snapshots are encrypted automatically.</p></li><li><p>You can share snapshots, but only if they are unencrypted.</p></li><li><p>These snapshots can be shared with other AWS accounts or made public.</p></li><li><p>Q1<br>Root Device Volumes can now be encrypted. If you have an unencrypted root device volume that needs to be encrypted do th follwing;</p><ul><li>Create a Snapshot of the unencrypted root device volume</li><li>Create a copy of the snapshot and select the encrypt option</li><li>Create an AMI from the encrypted Snapshot</li><li>Use that AMI to launch new encrypted instances</li></ul></li><li><p>EBS vs Instance Store</p><ul><li>Instance Store Volumes are sometimes called Ephemeral Storage.</li><li>Instance store volumes cannot be stoppted. If the underlying host fails, you will lose your data.</li><li>EBS backed instances can be stopped. You will not lose the data on this instance if it is stopped.</li><li>You can reboot both, you will not lose your data.</li><li>By default, both ROOT volumes will be deleted on termincation. However, with EBS volumes, you can tell AWS to keep the root device volume.</li></ul></li></ul><h2 id="encrypting-root-device-volumes">Encrypting Root Device Volumes</h2><ul><li>Create a Snapshot of the unencrypted root device volume.</li><li>Create a copy of the Snapshot and select the encrypt option.</li><li>Create an AMI from encypted Snapshot</li><li>Use that AMI to launch new encypted instances.</li></ul><h2 id="cloudwatch">CloudWatch</h2><ul><li><p>CloudWatch is used for monitoring performance</p></li><li><p>CloudWatch can monitor most of AWS as well as your applications that run on AWS.</p></li><li><p>CloudWatch with EC2 will monitor events every 5minutes by default.</p></li><li><p>You can have 1 minute intervals by turning on detailed monitoring.</p></li><li><p>You can create CloudWatch alarms which trigger notifications.</p></li><li><p>CloudWatch is all about performance, CloudTrail is all about auditing.</p></li><li><p>What can i do with CloudWatch?</p><ul><li>Dashboards - creates awsome dashboards to see what is happening with your AWS environment.</li><li>Alarms - Allows you to set Alarms that notify you when particular thresholds are hit.</li><li>Events - CloudWatch Events helps you to respond to state changes in your AWS resources.</li><li>Logs - CloudWatch Logs helps you to aggregate, monitor, and store logs.</li></ul></li><li><p>CloudWatch vs CloudTrail</p><ul><li>CloudWatch monitors performance</li><li>CloudTrail monitors API calls in the AWS platform.</li></ul></li></ul><h2 id="cli">CLI</h2><ul><li>You can interact with AWS from anywhere in the world just by using ther command line(CLI)</li><li>You will need to set up access in IAM</li><li>Commands themselves are not in the exam, but some basic commands will be useful to know for real life.</li></ul><h2 id="roles">Roles</h2><ul><li>Roles are more secure than storing your access key and secret access key on individual EC2 instances.</li><li>Roles are easier to manage.</li><li>Roles can be assigned to an EC2 instance after it is created using both the console &amp; command line.</li><li>Roles are universal - you can use then in any region.</li></ul><h2 id="bootstrap-scripts">Bootstrap scripts</h2><ul><li>Bootstrap scrips run when an EC2 isntance first boots.</li><li>Can be powerful way of automating software installs and updates.</li></ul><h2 id="instance-meta-data-user-data">Instance meta data &amp; User data</h2><ul><li>Used to get information about an instance (Such as public IP)</li><li>curl <a href="http://123.123.123.123/latest/meta-data/" target="_blank" rel="noopener">http://123.123.123.123/latest/meta-data/</a></li><li>curl <a href="http://123.123.123.123/latest/user-data/" target="_blank" rel="noopener">http://123.123.123.123/latest/user-data/</a></li></ul><h2 id="efs">EFS</h2><ul><li>Supprots the Network FIle System version 4 (NFSv4) Protocol</li><li>You only pay for the storage you use (no pre-provisioning required)</li><li>Can scale up to the petabytes</li><li>Can support thousands of concurrent NFS connections</li><li>Data is stored across multiple AZ’s within a region</li><li>Read After Write Consistency</li></ul><h2 id="ec2-placement-groups">EC2 Placement Groups</h2><p>Three types placement groups</p><ol><li>Clusterd Placement Group<ul><li>Low Network Latency / High Network Throughput</li></ul></li><li>Spread Placement Group<ul><li>Individual Critical EC2 instances</li></ul></li><li>Partitioned<ul><li>Multiple EC2 instances HDFS, HBase, and Cassandra</li></ul></li></ol><ul><li>Tips<ul><li>A clusted placement group can’t span multiple Availabilty zones.</li><li>A spread placement and partitioned group can.</li><li>The name you specify for a placement group must be unique within your AWS accout</li><li>Only certain types of instances can be launched in a placement group(Compute Optimized, GPU, Memory Optimized, Storage Optimized)</li><li>AWS recommend homogenous instances within clustered placement groups.</li><li>You can’t merge placement groups.</li><li>You can’t move an exising instance into a placement group. You can create an AMI from your exiting instance, and then launch a new intance from the AMI into a placement group</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;
&lt;p&gt;Tips&lt;/p&gt;
&lt;h2 id=&quot;pricing-model&quot;&gt;Pricing model&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;on Demand&lt;/li&gt;
&lt;li&gt;Reserved&lt;/li&gt;
&lt;li&gt;Spot
&lt;ul&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/EC2/chaper15</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper15/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper15/</id>
    <published>2020-01-13T05:32:20.364Z</published>
    <updated>2020-01-13T05:44:29.793Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ec2-placement-groups">EC2 Placement Groups</h1><p>Three Types of placement Groups;</p><ol><li>Clustered Placement Group<ul><li>Low Network Latency / High Network Throughput</li></ul></li><li>Spread Placement Group<ul><li>Individual Critical EC2 instances</li></ul></li><li>Partitioned<ul><li>Multiple EC2 instances HDFS, HBase, and Cassandra</li></ul></li></ol><p>Tips</p><ul><li>A clustered placement group can’t span multiple Avilability Zones.</li><li>A spread placement and partitioned group can</li><li>The name you specify for a placement group must be unique within your AWS account.</li><li>Only certain types of instances can be launched in a placement group(Compute Optimized, GPU, Memory Optimized, Storage Optimized)</li><li>AWS recomment homogenous instances within clustered placement groups.</li><li>You can’t merge placement groups</li><li>You can’t move a existing instance into a placement group. You can create an AMI from your exisiing instance, and then launch a new instance from the AMI into a placement group.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ec2-placement-groups&quot;&gt;EC2 Placement Groups&lt;/h1&gt;
&lt;p&gt;Three Types of placement Groups;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clustered Placement Group
&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/EC2/chaper14</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper14/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper14/</id>
    <published>2020-01-13T05:05:59.589Z</published>
    <updated>2020-01-13T05:32:17.785Z</updated>
    
    <content type="html"><![CDATA[<h1 id="efs-elastic-file-system">EFS (Elastic File System)</h1><p>What is EFS</p><p>File storage service for ec2 instances.</p><p>It is easy to use and provides a simple interface that allows you to create and configure file systems quickly and easily.</p><p>Tips</p><ul><li>Supports the Network File System version 4 (NFSv4) protocol</li><li>You only pay for the storage you use(no pre-provisioning required)</li><li>Can scale up to the petabytes</li><li>Can support thousands of concurrent NFS connections</li><li>Data is stored across multiple AZ’s within a region</li><li>Read After Write Consistency</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;efs-elastic-file-system&quot;&gt;EFS (Elastic File System)&lt;/h1&gt;
&lt;p&gt;What is EFS&lt;/p&gt;
&lt;p&gt;File storage service for ec2 instances.&lt;/p&gt;
&lt;p&gt;It is e
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/EC2/chaper13</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper13/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper13/</id>
    <published>2020-01-13T04:59:22.865Z</published>
    <updated>2020-01-13T05:05:41.364Z</updated>
    
    <content type="html"><![CDATA[<h1 id="instancde-metadata">Instancde Metadata</h1><p>Tips</p><ul><li>Used to get information about an instance (such as public ip)</li><li>curl http://(ip_address)/latest/meta-data/</li><li>curl http://(ip_address)/latest/user-data/</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;instancde-metadata&quot;&gt;Instancde Metadata&lt;/h1&gt;
&lt;p&gt;Tips&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Used to get information about an instance (such as public ip)&lt;/li&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/EC2/chaper12</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper12/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper12/</id>
    <published>2020-01-13T02:27:52.211Z</published>
    <updated>2020-01-13T04:40:44.992Z</updated>
    
    <content type="html"><![CDATA[<h1 id="identity-access-management-roles">Identity Access Management Roles</h1><p>Tips</p><ul><li>Roles are more secure than storing your access key and secret access key on individual EC2 instances.</li><li>Roles are easier to manager.</li><li>Roles can ve assigned to an EC2 intance after it is created using both the console &amp; command line.</li><li>Roles are universal - you can use them in any region.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;identity-access-management-roles&quot;&gt;Identity Access Management Roles&lt;/h1&gt;
&lt;p&gt;Tips&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Roles are more secure than storing your
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/EC2/chaper11</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper11/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper11/</id>
    <published>2020-01-09T14:27:33.675Z</published>
    <updated>2020-01-13T02:27:48.431Z</updated>
    
    <content type="html"><![CDATA[<h1 id="aws-command-line-cli">AWS Command Line (CLI)</h1><p>Tips</p><ul><li>You can interact with AWS from anywhere in the world just by using command line(CLI)</li><li>You will need to set up access in IAM</li><li>Commands themselves are not in the exam but some bacis command will be useful to know for real life</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;aws-command-line-cli&quot;&gt;AWS Command Line (CLI)&lt;/h1&gt;
&lt;p&gt;Tips&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can interact with AWS from anywhere in the world just by 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/EC2/chaper10</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper10/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper10/</id>
    <published>2020-01-09T14:07:04.224Z</published>
    <updated>2020-01-09T14:26:11.420Z</updated>
    
    <content type="html"><![CDATA[<h1 id="cloudwatch-101">CloudWatch 101</h1><p>Tips</p><ul><li>Standard Monitoring = 5 min</li><li>Detailed Monitoring = 1 min</li></ul><p>What can i do with CloudWatch</p><ol><li><p>Dashboard - Creates awesome dashboards to see what is happening with your AWS env</p></li><li><p>Alarms - Allows you to set Alarms that norify you when particular threshold are hit.</p></li><li><p>Events - CloudWatch Events helps you to respond to state changes in your AWS resources.</p></li><li><p>Logs - CloudWatch Logs helps you to aggregate, monitor, and store logs.</p></li></ol><ul><li>CloudWatch monitors performance</li><li>CloudTrail monitors API calls in AWS platform.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;cloudwatch-101&quot;&gt;CloudWatch 101&lt;/h1&gt;
&lt;p&gt;Tips&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Standard Monitoring = 5 min&lt;/li&gt;
&lt;li&gt;Detailed Monitoring = 1 min&lt;/li&gt;
&lt;/ul&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/EC2/chaper09</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper09/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper09/</id>
    <published>2020-01-09T13:58:38.542Z</published>
    <updated>2020-01-09T14:07:02.908Z</updated>
    
    <content type="html"><![CDATA[<h1 id="cloudwatch-101">CloudWatch 101</h1><p>What is Cloud watch</p><ul><li>monitoring service</li></ul><p>cloudWatch monitors performance</p><ul><li>Compute<ul><li>EC2</li><li>Autoscaling Groups</li><li>Elastic Load Balancers</li><li>Route53 Health Checks</li></ul></li><li>Storage &amp; Content Delivery<ul><li>EBS Volumes</li><li>Storage Gateways</li><li>CloudFront</li></ul></li></ul><p>Host Level Metrics Consist of</p><ul><li>CPU</li><li>Network</li><li>Disk</li><li>Status Check</li></ul><p>Cloud Trail compare with CloudWatch</p><p>Cloud Trail like CCTV</p><ul><li>CloudWatch monitors performance.</li><li>CloudTrail monitors API calls in the AWS platform.</li></ul><p>Remember;</p><ul><li>CW is used for monitoring performance</li><li>CW can monitor most of AWS as well as your applications that run on AWS.</li><li>CW with ec2 will monitor events every 5 minutes by default.</li><li>You can have 1 minute intervals by turning on detailed monitoring.</li><li>You can create CW alarms whi<br>ch trigger norification.</li><li>CW is all about performance. CloudTrail is all about auditing.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;cloudwatch-101&quot;&gt;CloudWatch 101&lt;/h1&gt;
&lt;p&gt;What is Cloud watch&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;monitoring service&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;cloudWatch monitors perform
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/EC2/chaper08</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper08/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper08/</id>
    <published>2020-01-09T13:46:19.471Z</published>
    <updated>2020-01-09T13:58:37.026Z</updated>
    
    <content type="html"><![CDATA[<h1 id="encryped-root-device-volumes-snapshots">Encryped Root Device Volumes &amp; Snapshots</h1><ul><li>Snapshots of encrypted volumes are encrypted automatically</li><li>Volumes restored from encrypted snapshots are encrypted automatically</li><li>You can share snapshots, but only if they are unencrypted.</li><li>These snapshots can be shared with other AWS accounts or made public</li></ul><p>Process</p><ol><li>Create a Snapshot of the unencrypted root device volume</li><li>Create a copy of the Snapshot and select encrypt option</li><li>Create an AMI from the encrypted Snapshot</li><li>Use that AMI to launch new encryted instances</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;encryped-root-device-volumes-snapshots&quot;&gt;Encryped Root Device Volumes &amp;amp; Snapshots&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Snapshots of encrypted volumes ar
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/EC2/chaper07</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper07/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper07/</id>
    <published>2020-01-09T08:48:10.690Z</published>
    <updated>2020-01-09T13:46:03.933Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ami-types-ebs-vs-instance-store">AMI types (EBS vs Instance store)</h1><ul><li>Select AMI based on:</li></ul><ol><li>Region</li><li>Operating system.</li><li>Architecture (32-bit or 64-bit)</li><li>Launch Permissions</li><li>Storage for Root device</li></ol><h2 id="all-amis-are-categorized-as-either-backed-by-ebs-or-instance-store">All AMIs are categorized as either backed by EBS or Instance store</h2><ul><li><p>For EBD Volume : The root device for an instance launched from the AMI is an Amazon EBS volume created from an Amazon EBS snapshot</p></li><li><p>For Instance Store Volumes : The root device for an instance launched from the AMI is an instance store volume created from a template stored in Amazon S3.</p></li></ul><p>tips</p><ul><li>Instance Store Volume are somethimes called Ephemeral Storage</li><li>Instance store volume cannot be stopped If the underlying host fails, you will lose your data.</li><li>EBS backed instances can be stopped. You will not lose the data on this instance if it is stopped.</li><li>You can reboot both, you will not lose your data.</li><li>By default, both ROOT volumes will be deleted on termination. However, with EBS volumes, you can tell aws to keep the root device volume</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ami-types-ebs-vs-instance-store&quot;&gt;AMI types (EBS vs Instance store)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Select AMI based on:&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Region&lt;/li
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/EC2/chaper06</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper06/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper06/</id>
    <published>2020-01-09T08:12:37.991Z</published>
    <updated>2020-01-09T08:47:53.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ebs1-volumne">EBS1 Volumne</h1><p>EBS 스토리지는 ec2 인스턴스와 같은 가용공간에 있어야함.</p><p>추가적인 볼륨들은 Ec2인스턴스 삭제를 해도 지워지지 않는다.</p><p>Tips</p><ul><li><p>EBS : virtual hard disk</p></li><li><p>Snapshots exist on S3. Think of snapshots as a photograph of the disk</p></li><li><p>Snapshots are point in time copies of Volumes.</p></li><li><p>Snapshots are incremental - this means that only the blocks that have changed since your last snapshot are moved to S3.</p></li><li><p>To create a snapshot for Amazone EBS volumes that serve as root devices, you should stop the instance before taking the snapshot.</p></li><li><p>however you can snap while instance running.</p></li><li><p>You can create AMI’s from both Volumes and Snapshots</p></li><li><p>You can change EBS volume size on the fly, including changing the size the type.</p></li><li><p>Volume will ALWAYS be in the same availability zone as the EC2 instance.</p></li><li><p>To move an EC2 volume from one AZ to another, take a snapshot of it, create an AMI from the snapshot and then use the AMI to launch the EC2 instance in a new AZ.</p></li><li><p>To move an EC2 volume from one region to another.<br>EC2 -&gt; snapshot -&gt; AMI -&gt; copy AMI to another zone.</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ebs1-volumne&quot;&gt;EBS1 Volumne&lt;/h1&gt;
&lt;p&gt;EBS 스토리지는 ec2 인스턴스와 같은 가용공간에 있어야함.&lt;/p&gt;
&lt;p&gt;추가적인 볼륨들은 Ec2인스턴스 삭제를 해도 지워지지 않는다.&lt;/p&gt;
&lt;p&gt;Tips&lt;/p&gt;
&lt;ul&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/EC2/chaper05</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper05/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper05/</id>
    <published>2020-01-09T08:03:47.634Z</published>
    <updated>2020-01-09T08:12:14.503Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ebs101">EBS101</h1><p>What is EBS</p><p>Elastic Block Store</p><p>5 diff type of EBS storage;</p><ol><li>General Purpose (SSD)</li><li>Provisioned IOPS (SSD)</li><li>Throughput Optimized HDD</li><li>Cold HDD</li><li>EBS Magnetic</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ebs101&quot;&gt;EBS101&lt;/h1&gt;
&lt;p&gt;What is EBS&lt;/p&gt;
&lt;p&gt;Elastic Block Store&lt;/p&gt;
&lt;p&gt;5 diff type of EBS storage;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;General Purpose (SSD)&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/EC2/chaper04</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper04/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper04/</id>
    <published>2020-01-09T07:55:43.013Z</published>
    <updated>2020-01-09T08:03:38.036Z</updated>
    
    <content type="html"><![CDATA[<h1 id="security-group">Security Group</h1><p>Tips</p><ul><li><p>All inbound traffic is blocked by default</p></li><li><p>All Outbountd traffic is allowed.</p></li><li><p>Change to Security groups take effect immediatly.</p></li><li><p>You can have any number of EC2 instances within a security group</p></li><li><p>You can have multiple security groups attached to Ec2 instances.</p></li><li><p>Security Groups are STATEFUL.</p></li><li><p>If you create an inbound rule allowing traffic in, that traffic is automatically allowed back out again</p></li><li><p>You cannot block specific IP address using security groups, instead use Network Access Control Lists.</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;security-group&quot;&gt;Security Group&lt;/h1&gt;
&lt;p&gt;Tips&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All inbound traffic is blocked by default&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All Outboun
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/EC2/chaper03</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper03/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper03/</id>
    <published>2020-01-09T06:23:06.423Z</published>
    <updated>2020-01-09T07:33:07.597Z</updated>
    
    <content type="html"><![CDATA[<h1 id="lanuch-ec2-instance-lab2">Lanuch EC2 Instance lab2</h1><p>Tips</p><ul><li>Terminate Protection Turned off by default</li><li>On an EBS-backed instance, the default action is for the root EBS volume to be deleted when the instance is terminated.</li><li>EBS Root Volumes of your DEFAULT AMI’s can be encrypted</li><li>Additional volumnes can be encypted.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;lanuch-ec2-instance-lab2&quot;&gt;Lanuch EC2 Instance lab2&lt;/h1&gt;
&lt;p&gt;Tips&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Terminate Protection Turned off by default&lt;/li&gt;
&lt;li&gt;On 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/EC2/chaper02</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper02/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper02/</id>
    <published>2020-01-09T05:42:36.679Z</published>
    <updated>2020-01-09T14:32:26.178Z</updated>
    
    <content type="html"><![CDATA[<h1 id="lanuch-ec2-instance-lab1">Lanuch EC2 Instance lab1</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;lanuch-ec2-instance-lab1&quot;&gt;Lanuch EC2 Instance lab1&lt;/h1&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/EC2/chaper01</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper01/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/EC2/chaper01/</id>
    <published>2020-01-08T07:48:57.441Z</published>
    <updated>2020-01-09T07:32:33.294Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ec2-101-elastic-compute-cloud">EC2 101 Elastic compute cloud</h1><p>What is EC2</p><p>EC2 is a web service that provide resizable compute capacity in the cloud.</p><p>장점 : EC2는 서버 인스턴스 구성시 간편하고, 스케일 업/다운 방식에 상관없이 빠르게 변경 가능하다.</p><p>Pricing Models</p><ol><li>On Demand</li><li>Reserved<ul><li>Standard Reserved instances</li><li>Convertible Reserved Instances</li><li>Scheduled Reserved Instances</li></ul></li><li>spot<ul><li>etc</li></ul></li><li>Dedicated Hosts<ul><li>etc</li></ul></li></ol><p>EC2 Instance Types</p><ul><li>F1, I3, G3, H1, T3…</li><li>tips [Fight <a href="http://DR.MC" target="_blank" rel="noopener">DR.MC</a> PXZ AU]</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ec2-101-elastic-compute-cloud&quot;&gt;EC2 101 Elastic compute cloud&lt;/h1&gt;
&lt;p&gt;What is EC2&lt;/p&gt;
&lt;p&gt;EC2 is a web service that provide resizable 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Tips/Markdown_env</title>
    <link href="https://gurioh.github.io/guriOH.github.io/Tips/Markdown_env/"/>
    <id>https://gurioh.github.io/guriOH.github.io/Tips/Markdown_env/</id>
    <published>2020-01-08T04:19:19.181Z</published>
    <updated>2020-01-08T06:10:42.401Z</updated>
    
    <content type="html"><![CDATA[<h1 id="마크다운-작성-환경-만들기">마크다운 작성 환경 만들기</h1><ul><li>사용플러그인</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;마크다운-작성-환경-만들기&quot;&gt;마크다운 작성 환경 만들기&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;사용플러그인&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWS/IAM/chapter01</title>
    <link href="https://gurioh.github.io/guriOH.github.io/AWS/IAM/chapter01/"/>
    <id>https://gurioh.github.io/guriOH.github.io/AWS/IAM/chapter01/</id>
    <published>2020-01-08T00:29:16.539Z</published>
    <updated>2020-01-08T07:48:39.638Z</updated>
    
    <content type="html"><![CDATA[<h1 id="iam-정리">IAM 정리</h1><ul><li>IAM</li></ul><ul><li>Users</li><li>Groups</li><li>Policies</li><li>Roles</li></ul><ul><li><p>Root account is simply the account created when first setup your aws account it has complete admin access</p></li><li><p>Always setup MFA on your root account.</p></li><li><p>password customise.</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;iam-정리&quot;&gt;IAM 정리&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;IAM&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Users&lt;/li&gt;
&lt;li&gt;Groups&lt;/li&gt;
&lt;li&gt;Policies&lt;/li&gt;
&lt;li&gt;Roles&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>mybatis/mybatis-문자열 해결</title>
    <link href="https://gurioh.github.io/guriOH.github.io/mybatis/mybatis-%EB%AC%B8%EC%9E%90%EC%97%B4%20%ED%95%B4%EA%B2%B0/"/>
    <id>https://gurioh.github.io/guriOH.github.io/mybatis/mybatis-문자열 해결/</id>
    <published>2020-01-07T06:35:55.073Z</published>
    <updated>2020-01-07T06:48:59.935Z</updated>
    
    <content type="html"><![CDATA[<p>Mybatis 사용시 쿼리문에 문자열 비교연사자나 부등호를 사용할 때 가 있다.</p><p>select * from user where salary &gt; 100;</p><p>일때 '&gt;'와 같은 기호가 괄호인지 비교연산자인지 모르는데,</p><p>이럴때 ‘&lt;![CDATA[’ 을 사용하면 CDATA 안에 들어가는 문장을 문자열로 인식하게 된다.</p><![CDATA[select * from user where salary > 100]]> 이렇게 사용하면 특수문자가 들어가도 문자열로 인식한다.]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Mybatis 사용시 쿼리문에 문자열 비교연사자나 부등호를 사용할 때 가 있다.&lt;/p&gt;
&lt;p&gt;select * from user where salary &amp;gt; 100;&lt;/p&gt;
&lt;p&gt;일때 &#39;&amp;gt;&#39;와 같은 기호가 괄호인지 비교연산자인지 모르는데,
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Java/Spring/java-reflection</title>
    <link href="https://gurioh.github.io/guriOH.github.io/Java/Spring/java-reflection/"/>
    <id>https://gurioh.github.io/guriOH.github.io/Java/Spring/java-reflection/</id>
    <published>2019-12-30T06:34:33.221Z</published>
    <updated>2019-12-30T06:34:37.022Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
</feed>
